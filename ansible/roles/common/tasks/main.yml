---
- name: Make the proxy setting persistent in PowerShell profile
  ansible.windows.win_shell: |
    $profilePath = [System.IO.Path]::Combine($env:USERPROFILE, 'Documents', 'WindowsPowerShell', 'profile.ps1')
    if (-not (Test-Path -Path $profilePath)) {
      New-Item -ItemType File -Path $profilePath -Force
    }
    $proxyCommand = '[System.Net.WebRequest]::DefaultWebProxy = New-Object System.Net.WebProxy'
    if (-not (Select-String -Path $profilePath -Pattern $proxyCommand)) {
      Add-Content -Path $profilePath -Value $proxyCommand
    }
  changed_when: false

- name: "Get network adapter names"
  ansible.windows.win_shell: |
    Get-NetAdapter | Where-Object { $_.Status -eq 'Up' } | Select-Object -ExpandProperty Name
  register: net_adapter

- name: "Debug network adapter name"
  debug:
    var: net_adapter.stdout_lines

- name: "Force a DNS on the adapter"
  ansible.windows.win_dns_client:
    adapter_names: "{{ net_adapter.stdout_lines[0] }}"  # Using the first adapter found
    dns_servers:
      - "192.168.10.1"
  when: force_dns_server == "yes"
  
- name: Disable Proxy Auto-Configuration using PowerShell
  ansible.windows.win_shell: |
    Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\WinHttpAutoProxySvc' -Name 'Start' -Value 4
    $result = Get-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\WinHttpAutoProxySvc' -Name 'Start'
    if ($result.Start -ne 4) {
      Write-Host "Failed to disable Proxy Auto-Configuration"
      exit 1
    } else {
      Write-Host "Proxy Auto-Configuration successfully disabled"
    }
  register: proxy_auto_config_disabled

- name: Reboot the machine to apply the changes
  ansible.windows.win_reboot:
    reboot_timeout: 600

- name: Wait for the system to reboot
  ansible.windows.win_reboot:
    reboot_timeout: 600
    connect_timeout: 300
    
- name: Ensure TLS 1.2 is enabled for the current session
  win_shell: |
    [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12
  register: tls_result
  changed_when: false  # This command only modifies the session and doesn't require change detection

- name: Ensure PSGallery repository is registered
  win_shell: |
    Unregister-PSRepository -Name PSGallery -ErrorAction SilentlyContinue
    Register-PSRepository -Default
  register: psrepository_result
  changed_when: psrepository_result.rc == 0

- name: "Check and install ComputerManagementDsc module"
  win_shell: |
    Install-Module -Name ComputerManagementDsc -Force
    Import-Module ComputerManagementDsc
  register: computermgmt_result
  changed_when: computermgmt_result.rc == 0

- name: Windows | Enable Remote Desktop
  win_dsc:
    resource_name: RemoteDesktopAdmin
    IsSingleInstance : 'yes'
    Ensure: present
    UserAuthentication: Secure

- name: Windows | Check for xNetworking Powershell module
  win_psmodule:
    name: xNetworking
    state: present

- name: Firewall | Allow RDP through Firewall
  win_dsc:
    resource_name: xFirewall
    Name: "Administrator access for RDP (TCP-In)"
    Ensure: present
    Enabled: True
    Profile: "Domain"
    Direction: "Inbound"
    Localport: "3389"
    Protocol: "TCP"
